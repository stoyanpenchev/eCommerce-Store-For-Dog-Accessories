// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawAndCollar.Data;

#nullable disable

namespace PawAndCollar.Data.Migrations
{
    [DbContext(typeof(PawAndCollarDbContext))]
    [Migration("20230807195036_SeedCartsToDatabase")]
    partial class SeedCartsToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Collars"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Leash"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Harness"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bow Tie Collars"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Flower Collars"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bow Ties / Flowers"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bandanas"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Reversible Vests"
                        });
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserBuyedProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserBuyedProductsId")
                        .IsUnique()
                        .HasFilter("[UserBuyedProductsId] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9caf16d5-298e-406a-a3da-69dcda2e5e27"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5291836a-942e-4a1a-80b0-72c3215f9c03",
                            Email = "Admin@abv.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ABV.BG",
                            NormalizedUserName = "ADMIN@ABV.BG",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ9I8crSOUfMn+YSofqRSDoMKdDYBL3tx69Z4M8tx1knz2lcRu+WZFrah78ZIhpWIw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "132e7004-c340-4c94-9d8b-518703089522",
                            TwoFactorEnabled = false,
                            UserName = "Admin@abv.bg"
                        },
                        new
                        {
                            Id = new Guid("7f8a1988-0d6f-48cf-5993-08db77f1f68e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6dc301e5-4cfc-4901-957c-1af8031c7c31",
                            Email = "creator@abv.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "CREATOR@ABV.BG",
                            NormalizedUserName = "CREATOR@ABV.BG",
                            PasswordHash = "AQAAAAEAACcQAAAAEDx4dY+COQWvrkKCUooBAulqZ/lpGB9zkLUYnN2CQO9MgJsxlua2fKPpu+ZnwMw4uQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e972d234-7ccb-4315-9430-e7ddda0dc29f",
                            TwoFactorEnabled = false,
                            UserName = "creator@abv.bg"
                        },
                        new
                        {
                            Id = new Guid("7b724b4e-70ea-42bc-5992-08db77f1f68e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "083e419b-56c8-4fcb-87fa-c46d574af33a",
                            Email = "doglover@abv.bg",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DOGLOVER@ABV.BG",
                            NormalizedUserName = "DOGLOVER@ABV.BG",
                            PasswordHash = "AQAAAAEAACcQAAAAENPZwJvYjNhrQm6Ew9EJY/0EwlsTByqBw++ONYcjj5diSOur5sIUpjRGszrVcPEQvQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3941896c-8893-42f9-beaa-a64c5a14b832",
                            TwoFactorEnabled = false,
                            UserName = "doglover@abv.bg"
                        });
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36f85cb2-39e3-4d82-bc1d-bfddb6b3f13f"),
                            TotalPrice = 0m,
                            UserId = new Guid("7b724b4e-70ea-42bc-5992-08db77f1f68e")
                        },
                        new
                        {
                            Id = new Guid("f91f214b-123d-47f1-9bdc-e97dfadc431b"),
                            TotalPrice = 0m,
                            UserId = new Guid("9caf16d5-298e-406a-a3da-69dcda2e5e27")
                        });
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RatingType")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Creator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Creators");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            PhoneNumber = "+359884156182",
                            UserId = new Guid("7f8a1988-0d6f-48cf-5993-08db77f1f68e")
                        },
                        new
                        {
                            Id = new Guid("20b110ec-107c-4b88-9bd4-56f4d297b179"),
                            PhoneNumber = "+359884562194",
                            UserId = new Guid("9caf16d5-298e-406a-a3da-69dcda2e5e27")
                        });
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.OrderItem", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderedItems");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AverageScore")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.UsersBuyedProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("UsersBuyedProducts");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Color = "Pink",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(690),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "Soft and sustainable fabric on the outside & inside, so even the most sensitive pups can stay comfortable all day long.\r\nCozy Fleece Vest: Machine wash cold on delicate cycle or hand wash. Air dry.",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0102/1437/5505/products/DSC03178-1-148760_720x.jpg?v=1679180307",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Checker Pink Collar",
                            Price = 52.00m,
                            Quantity = 10,
                            Size = 5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Color = "Anemone",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(709),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "In the meadows of Europe, North America, and Japan, where secrets whisper on gentle breezes, the anemone dances, an ethereal wildflower.\r\n\r\nSymbolizing understated allure, this fragile blossom enchants hearts, its subtle loveliness imbuing floral tapestries with a touch of quiet power.",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0102/1437/5505/products/DSC06736-1_d5aa7dd9-1769-47a1-affb-98d78ba9fb86-812247_720x.jpg?v=1687945201",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Anemone Collar",
                            Price = 52.00m,
                            Quantity = 2,
                            Size = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Color = "Brown",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(714),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "A part of our boho collection including Suns, Stars, Rainbows, and lightnings. This collection is perfect for the boho, minimalist, and chic pups. Seamless Sun on lovely shade of terracotta-orange background.",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0102/1437/5505/products/cute-dog-collars-girl_c89dd21c-4f50-4bf3-9dd4-32198ee0737a-429779_720x.jpg?v=1669923706",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Suns Collar",
                            Price = 52.00m,
                            Quantity = 15,
                            Size = 5
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            Color = "Midnight",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(717),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "Midnight Floral brings out a lovely serenity. Featuring an abundance of lively flowers on a bold black background, this print is sure to stand out on any color of fur. 100% cotton fabric with the perfect touch of rose gold metal hardware.",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0102/1437/5505/products/DSC07134-1-181634_720x.jpg?v=1683713614",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Midnight Floral Collar",
                            Price = 52.00m,
                            Quantity = 3,
                            Size = 5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Color = "Pink",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(722),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "One of our bestselling designs of all time. Crafted with care and attention to detail, this stunning design features an abundance of lively flowers that will add a touch of  nature's beauty to your furry friend's wardrobe.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/Cute-dog-harness-for-large-dogs_652c3b45-bf4f-4d1f-9532-f34971c4eff9-714245_720x.jpg?v=1669533905",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Morning Floral Harness",
                            Price = 81.00m,
                            Quantity = 6,
                            Size = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Color = "Darky",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(738),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "Give your pup the gift of coziness with our Cozy Christmas design! This dark navy blue print is filled with adorable holiday elements that will have your furry friend feeling warm and snug, making it the perfect addition to their winter wardrobe.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/cutest-harness-for-puppy-418532_720x.jpg?v=1669533830",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Cozy Christmas Harness",
                            Price = 81.00m,
                            Quantity = 6,
                            Size = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Color = "Peachy Pink",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(743),
                            CreatorId = new Guid("3cb1a657-3d82-483c-8932-f53cd637bd11"),
                            Description = "One of our most loved prints of all time. This delicious peach print will make your pup's cuteness irresistible. Featuring seamless Juicy peaches on a lovely peach-pink background.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/Best-dog-harnesses-490084_720x.jpg?v=1669620377",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Peach Harness",
                            Price = 81.00m,
                            Quantity = 8,
                            Size = 7
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 6,
                            Color = "English Green",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(751),
                            CreatorId = new Guid("20b110ec-107c-4b88-9bd4-56f4d297b179"),
                            Description = "This is a true showstopper. With its timeless tartan pattern, our Gentleman design is the epitome of sophisticated style for your pup. ",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/Cute-dog-collars-girl-999347_720x.jpg?v=1669663616",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Gentleman Bow Tie Collar",
                            Price = 62.00m,
                            Quantity = 5,
                            Size = 2
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 6,
                            Color = "English Green",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(754),
                            CreatorId = new Guid("20b110ec-107c-4b88-9bd4-56f4d297b179"),
                            Description = "Classic polka dot with bright striking red background. The Versatility is perfect for any occasion and will always make sure your pup stands out from the crowd. One of our most loved designs of all time.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/bowtie-collars-for-large-dogs-509429_720x.jpg?v=1669836746",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Red Polka Dot Bow Tie Collar",
                            Price = 62.00m,
                            Quantity = 5,
                            Size = 2
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 8,
                            Color = "Purple",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(761),
                            CreatorId = new Guid("20b110ec-107c-4b88-9bd4-56f4d297b179"),
                            Description = "Made with premium waterproof shell on one side, and 360° reflective material on the other. You've got functionality and adorableness - all in one.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/ZoomiesRainvest_1-512091_720x.jpg?v=1677154390",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Purple Daisy Reversible Zoomies Rain Vest",
                            Price = 91.00m,
                            Quantity = 15,
                            Size = 3
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 7,
                            Color = "Green",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(767),
                            CreatorId = new Guid("20b110ec-107c-4b88-9bd4-56f4d297b179"),
                            Description = "Beautifully illustrated by Vancouver local artist @hye.joy. This print brings out the liveliness of a spring playground with unique line illustrations, paired with a beautiful shade of olive background.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/DSC00043-1-238909_720x.jpg?v=1687529058",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Playground Bandana",
                            Price = 44.00m,
                            Quantity = 15,
                            Size = 3
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 7,
                            Color = "Christmas",
                            CreatedOn = new DateTime(2023, 8, 7, 19, 50, 35, 996, DateTimeKind.Utc).AddTicks(770),
                            CreatorId = new Guid("20b110ec-107c-4b88-9bd4-56f4d297b179"),
                            Description = "Give your pup the gift of coziness with our Cozy Christmas design! This dark navy blue print is filled with adorable holiday elements that will have your furry friend feeling warm and snug, making it the perfect addition to their winter wardrobe.",
                            ImageUrl = "https://sniffandbark.com.co/cdn/shop/products/Bandanas-for-dogs_7aad35d9-b940-49bd-8895-9f8bb74dc6dd-759894_720x.jpg?v=1668643303",
                            IsActive = true,
                            Material = "Cotton",
                            Name = "Cozy Christmas Bandana",
                            Price = 44.00m,
                            Quantity = 15,
                            Size = 5
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.ApplicationUser", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.UsersBuyedProducts", "UsersBuyedProducts")
                        .WithOne("User")
                        .HasForeignKey("PawAndCollar.Data.Models.Models.ApplicationUser", "UserBuyedProductsId");

                    b.Navigation("UsersBuyedProducts");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Cart", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", "User")
                        .WithOne("ActiveCart")
                        .HasForeignKey("PawAndCollar.Data.Models.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Comment", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawAndCollar.Data.Models.Models.Review", "Review")
                        .WithMany("Comments")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Creator", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Order", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.OrderItem", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.Cart", "Cart")
                        .WithMany("OrderedItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawAndCollar.Data.Models.Models.Order", "Order")
                        .WithMany("OrderedItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PawAndCollar.Data.Models.Product", "Product")
                        .WithMany("OrderedItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Review", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Product", "Product")
                        .WithOne("Review")
                        .HasForeignKey("PawAndCollar.Data.Models.Models.Review", "ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.UsersBuyedProducts", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.Order", "Order")
                        .WithMany("UserBuyedProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PawAndCollar.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Product", b =>
                {
                    b.HasOne("PawAndCollar.Data.Models.Models.ApplicationUser", "User")
                        .WithMany("BuyedProducts")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("PawAndCollar.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PawAndCollar.Data.Models.Models.Creator", "Creator")
                        .WithMany("Products")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.ApplicationUser", b =>
                {
                    b.Navigation("ActiveCart");

                    b.Navigation("BuyedProducts");

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Cart", b =>
                {
                    b.Navigation("OrderedItems");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Creator", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Order", b =>
                {
                    b.Navigation("OrderedItems");

                    b.Navigation("UserBuyedProducts");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.Review", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Models.UsersBuyedProducts", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("PawAndCollar.Data.Models.Product", b =>
                {
                    b.Navigation("OrderedItems");

                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
