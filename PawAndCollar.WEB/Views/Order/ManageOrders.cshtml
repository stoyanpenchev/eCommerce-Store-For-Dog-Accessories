@model AllOrdersQueryModel

<h2>Order List</h2>

<form method="get">
	<div class="row">
		<div class="form-group col-md-3">
			<label asp-for="Status"></label>
			<select asp-for="Status" class="form-control">
				<option value="">All</option>
				@foreach (var status in Model.Statuses)
				{
					<option value="@status">@status</option>
				}
			</select>
		</div>

		<div class="form-group col-md-2">
			<label asp-for="OrdersPerPage"></label>
			<select asp-for="OrdersPerPage" class="form-control">
				<option value="2">2</option>
				<option value="4">4</option>
				<option value="10">10</option>
				<option value="20">20</option>
			</select>
		</div>

		<div class="form-group col-md-3">
			<label asp-for="OrderSorting"></label>
			<select asp-for="OrderSorting" class="form-control">
				<option value="1">TotalPrice (Low to High)</option>
				<option value="2">TotalPrice (High to Low)</option>
				<option value="3">Newest</option>
				<option value="4">Oldest</option>
			</select>
		</div>

		<div class="col-md-3">
			<div class="form-group mt-3 p-2">
				<input type="submit" value="Filter" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>

@{
	int previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	int maxPage = (int)Math.Ceiling((double)Model.TotalOrders / Model.OrdersPerPage);
}


@if (!Model.Orders.Any())
{
	<h2 class="text-center">No orders found by the given criteria!</h2>
}

@if (Model.Orders.Any())
{
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th scope="col">Order Id</th>
				<th scope="col">Customer Name</th>
				<th scope="col">Phone Number</th>
				<th scope="col">Email</th>
				<th scope="col">Total Price</th>
				<th scope="col">Status</th>
				<th scope="col">Created On</th>
				<th scope="col">Details</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var order in Model.Orders)
			{
				<tr>
					<td>@order.Id</td>
					<td>@order.CustomerName</td>
					<td>@order.PhoneNumber</td>
					<td>@order.Email</td>
					<td>@order.TotalPrice</td>
					<td>@order.Status</td>
					<td>@order.OrderDate</td>	
					<td>
						<a class="btn btn-primary"
						   asp-controller="Order"
				           asp-action="Details"
						   asp-route-id="@order.Id">Details</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
<nav aria-label="Page navigation">
	<ul class="pagination justify-content-center">
		<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
			<a class="page-link"
			   asp-controller="Order"
			   asp-action="ManageOrders"
			   asp-route-currentPage="@previousPage"
			   asp-route-category="@Model.Status"
			   asp-route-sorting="@((int)Model.OrderSorting)"
			   asp-route-OrdersPerPage="@Model.OrdersPerPage"
	           tabindex="-1"
	           aria-disabled="true">Previous</a>
		</li>

		@for (int i = 1; i <= maxPage; i++)
		{
			<li class="page-item @(i == Model.CurrentPage ? "active" : string.Empty)">
				<a class="page-link"
			   asp-controller="Order"
			   asp-action="ManageOrders"
			   asp-route-currentPage="@i"
			   asp-route-category="@Model.Status"
			   asp-route-sorting="@((int)Model.OrderSorting)"
			   asp-route-OrdersPerPage="@Model.OrdersPerPage">@i</a>
			</li>
		}

		@{
			bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage || !Model.Orders.Any();
		}

		<li class="page-item @(shouldNextPageBeDisabled ? "disabled" : string.Empty)">
			<a class="page-link"
			   asp-controller="Order"
			   asp-action="ManageOrders"
			   asp-route-currentPage="@(Model.CurrentPage + 1)"
			   asp-route-category="@Model.Status"
			   asp-route-sorting="@((int)Model.OrderSorting)"
			   asp-route-OrdersPerPage="@Model.OrdersPerPage">Next</a>
		</li>
	</ul>
</nav>


