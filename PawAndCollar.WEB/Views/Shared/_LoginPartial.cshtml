@using Microsoft.AspNetCore.Identity
@using PawAndCollar.Data.Models.Models;
@using PawAndCollar.Web.Infrastructure.Extensions;
@using PawAndCollarServices.Interfaces;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@inject ICreatorService CreatorService;

@{
	bool isUserCreator = await CreatorService.CreatorExistByUserIdAsync(this.User.GetId());
}

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		string userName = User.Identity.Name.Split('@')[0];
		userName = userName.First().ToString().ToUpper() + userName.Substring(1);

		@if (!isUserCreator)
		{
			<li class="nav-item">
				<a class="nav-link text-dark" asp-area="" asp-controller="Creator" asp-action="Become">Become Creator</a>
			</li>
		}
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userName!</a>
		</li>
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
		</li>
	}
</ul>
